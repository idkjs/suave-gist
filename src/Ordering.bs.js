// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

function Sortable(Item) {
  var orderingToInt = function (o) {
    switch (o) {
      case /* Greater */0 :
          return 1;
      case /* Less */1 :
          return -1;
      case /* Equal */2 :
          return 0;
      
    }
  };
  var sort = function (ts) {
    return List.sort((function (x, y) {
                  return orderingToInt(Curry._2(Item.compare, x, y));
                }), ts);
  };
  return {
          orderingToInt: orderingToInt,
          sort: sort
        };
}

function compare(x, y) {
  if (Caml_obj.caml_greaterthan(x, y)) {
    return /* Greater */0;
  } else if (Caml_obj.caml_lessthan(x, y)) {
    return /* Less */1;
  } else {
    return /* Equal */2;
  }
}

var Ord_Int = {
  compare: compare
};

function orderingToInt(o) {
  switch (o) {
    case /* Greater */0 :
        return 1;
    case /* Less */1 :
        return -1;
    case /* Equal */2 :
        return 0;
    
  }
}

function sort(ts) {
  return List.sort((function (x, y) {
                return orderingToInt(compare(x, y));
              }), ts);
}

var IntSort = {
  orderingToInt: orderingToInt,
  sort: sort
};

var sorted = sort({
      hd: 3,
      tl: {
        hd: 2,
        tl: {
          hd: 1,
          tl: /* [] */0
        }
      }
    });

console.log(sorted);

function Invert(Item) {
  var compare = function (x, y) {
    return Curry._2(Item.compare, y, x);
  };
  return {
          compare: compare
        };
}

function compare$1(x, y) {
  return compare(y, x);
}

var Ord_Int_Desc = {
  compare: compare$1
};

function orderingToInt$1(o) {
  switch (o) {
    case /* Greater */0 :
        return 1;
    case /* Less */1 :
        return -1;
    case /* Equal */2 :
        return 0;
    
  }
}

function sort$1(ts) {
  return List.sort((function (x, y) {
                return orderingToInt$1(compare(y, x));
              }), ts);
}

var IntSort_Desc = {
  orderingToInt: orderingToInt$1,
  sort: sort$1
};

console.log(sort$1({
          hd: 3,
          tl: {
            hd: 2,
            tl: {
              hd: 4,
              tl: {
                hd: 2,
                tl: /* [] */0
              }
            }
          }
        }));

exports.Sortable = Sortable;
exports.Ord_Int = Ord_Int;
exports.IntSort = IntSort;
exports.sorted = sorted;
exports.Invert = Invert;
exports.Ord_Int_Desc = Ord_Int_Desc;
exports.IntSort_Desc = IntSort_Desc;
/* sorted Not a pure module */
